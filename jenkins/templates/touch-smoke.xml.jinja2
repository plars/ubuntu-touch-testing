<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>
<![CDATA[
This job provides a flexible way to execute all the tests in our daily image
testing process that contribute to the
<a href="http://reports.qa.ubuntu.com/smokeng/">QA Dashboard</a>.
The job is parameterized to give flexibility in what gets tested. A couple of
common ways to run this job are:
<dl>
  <dt>Full Test Run</dt>
  <dd>TESTS=ALL</dd>
  <dd>APPS=ALL</dd>
  <dd>PACKAGES=ALL</dd>
  <dt>Re-run a Failed Autopilot Test</dt>
  <dd>INSTALL_URL=http://jenkins-dev-image-test:8080/job/saucy-touch_ro-mako/9</dd>
  <dd>APPS=share_app</dd>
  <dt>Run Several Autopilot Tests on Latest Build</dt>
  <dd>APPS=share_app music_app</dd>
  <dd>PACKAGES=share-app-autopilot</dd>
  <dt>Run All Tests Under Utah</dt>
  <dd>TESTS=ALL_INCLUDING_AUTOPILOT</dd>
</dl>
<pre>
#NOTE: Automatically created from a script as part of daily smoke testing
  {{branch}}
</pre>
{% if statsd_key %}
<h3>Graphite Reports</h3>
<ul>
  <li><a href="https://graphite.engineering.canonical.com/graphlot/?width=841&height=770&&target=alias%28scale%28statsd.{{statsd_key}}.{{imagetype}}.provision.mean%2C0.000016667%29%2C%22Provisioning%20Time(minutes)%22%29&target=alias%28scale%28statsd.{{statsd_key}}.{{imagetype}}.test_autopilot.mean%2C0.000016667%29%2C%22Autopilot%20Tests%20Time%22%29&target=alias%28scale%28statsd.{{statsd_key}}.{{imagetype}}.test_utah.mean%2C0.000016667%29%2C%22UTAH%20Tests%20Time%22%29&from=-1weeks">Timings (1 week)</a></li>
  <li><a href="https://graphite.engineering.canonical.com/graphlot/?width=841&height=770&&target=alias%28scale%28statsd.{{statsd_key}}.{{imagetype}}.provision.mean%2C0.000016667%29%2C%22Provisioning%20Time(minutes)%22%29&target=alias%28scale%28statsd.{{statsd_key}}.{{imagetype}}.test_autopilot.mean%2C0.000016667%29%2C%22Autopilot%20Tests%20Time%22%29&target=alias%28scale%28statsd.{{statsd_key}}.{{imagetype}}.test_utah.mean%2C0.000016667%29%2C%22UTAH%20Tests%20Time%22%29&from=-4weeks">Timings (4 weeks)</a></li>
</ul>
{% endif %}
]]>
  </description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>INSTALL_URL</name>
          <description>A URL to the previous job. If provided this job will use the same install options as it used. If the device executing the job happens to have the exact same image, then provisioning can be skipped.
	  </description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTS</name>
          <description>A space separated list of utah tests to run. "ALL" can be used to run all known tests.
	  </description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>APPS</name>
          <description>A space separated list of autopilot tests to run. "ALL" can be used to run all known tests.
	  </description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
	<hudson.model.StringParameterDefinition>
          <name>PACKAGES</name>
          <description>A space separated list of packages to install. "ALL" can be used to install required packages for all known autopilot tests.
	  </description>
          <defaultValue>ALL</defaultValue>
        </hudson.model.StringParameterDefinition>
	<hudson.model.StringParameterDefinition>
          <name>PPAS</name>
          <description>A space separated list of PPAs to configure on the device.
	  </description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <com.sonyericsson.rebuild.RebuildSettings>
      <autoRebuild>false</autoRebuild>
    </com.sonyericsson.rebuild.RebuildSettings>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>{{ name }}</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>true</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>set -e
BRANCH=&quot;{{branch}}&quot;
BZRDIR=`echo &quot;$BRANCH&quot; | awk -F/ &apos;{ print $(NF) }&apos;`
BZRDIR=$(readlink -f $BZRDIR)
[ -d $BZRDIR ] &amp;&amp; rm -rf $BZRDIR
bzr branch ${BRANCH} ${BZRDIR}

export ANDROID_SERIAL={{serial}}
export IMAGE_TYPE={{imagetype}}
{% if statsd_key %}
export STATSD_KEY={{statsd_key}}.{{imagetype}}
{% endif %}

{{image_opt}}
${BZRDIR}/scripts/run-smoke
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>clientlogs/**</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver>
      <testResults>clientlogs/**/test_results.xml</testResults>
      <keepLongStdio>true</keepLongStdio>
      <testDataPublishers>
        <hudson.plugins.junitattachments.AttachmentPublisher/>
      </testDataPublishers>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
      <regexp>^= TOUCH IMAGE VERSION:([0-9]+.*)</regexp>
      <regexpForFailed>^= TOUCH IMAGE VERSION:([0-9]+.*)</regexpForFailed>
      <setForMatrix>false</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
{% if publish %}
    <hudson.tasks.Mailer>
      <recipients>paul.larson@canonical.com</recipients>
      <dontNotifyEveryUnstableBuild>false</dontNotifyEveryUnstableBuild>
      <sendToIndividuals>false</sendToIndividuals>
    </hudson.tasks.Mailer>
    <hudson.plugins.build__publisher.BuildPublisher>
      <publishUnstableBuilds>true</publishUnstableBuilds>
      <publishFailedBuilds>true</publishFailedBuilds>
      <postActions class="vector"/>
    </hudson.plugins.build__publisher.BuildPublisher>
{% endif %}
  </publishers>
  <buildWrappers>
      <hudson.plugins.build__timeout.BuildTimeoutWrapper>
          <timeoutMinutes>180</timeoutMinutes>
      <failBuild>true</failBuild>
      <writingDescription>false</writingDescription>
      <timeoutPercentage>0</timeoutPercentage>
      <timeoutType>absolute</timeoutType>
      <timeoutMinutesElasticDefault>3</timeoutMinutesElasticDefault>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
  </buildWrappers>
</project>

